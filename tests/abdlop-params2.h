// auto-generated by abdlop-codegen.sage from ../tests/abdlop-params2.sage.
//
// protocol is statistically complete with correctness error >= 1 - 2^(-6)
// protocol is simulatable under MLWE(24,7,[-1,1])
// protocol is knowledge-sound with knowledge error <= 2^(-147.0)
//
// Ring
// degree d = 128
// modulus q = 75557863725914323419821, log(q) ~ 76.0
// factors q = q1
//
// Compression
// D = 10
// gamma = 214060, log(gamma) ~ 17.707656
// m = (q-1)/gamma = 352975164560937697, log(m) ~ 58.292344
//
// Dimensions of secrets
// s1: m1 = 21
// m: l = 3
// s2: m2 = 31
//
// Size of secrets
// l2(s1) <= alpha = 51.845926
// m unbounded
// s2 uniform in [-nu,nu] = [-1,1]
//
// Challenge space
// c uniform in [-omega,omega] = [-2,2], o(c)=c, sqrt(l1(o(c)*c)) <= eta = 59
//
// Standard deviations
// stdev1 = 25395.2, log(stdev1/1.55) = 14.0
// stdev2 = 25395.2, log(stdev2/1.55) = 14.0
//
// Repetition rate
// M1 = 5.0431931
// M2 = 7.1548453
// total = 36.083266
//
// Security
// MSIS dimension: 4
// MSIS root hermite factor: 1.0043781
// MLWE dimension: 24
// MLWE root hermite factor: 1.004348
//
// 23 bit moduli for degree 128: [8386817, 8385281, 8383489, 8382977, 8380417, 8378369, 8377601, 8375041]
// bit length of products: [22, 45, 68, 91, 114, 137, 160, 183]
// inverses: [1, -1403006, 637685, 764063, 408139, -1186442, -3321451, -685525]

#include "lazer.h"
static const limb_t params2_q_limbs[] = {685UL, 4096UL};
static const int_t params2_q = {{(limb_t *)params2_q_limbs, 2, 0}};
static const limb_t params2_qminus1_limbs[] = {684UL, 4096UL};
static const int_t params2_qminus1 = {{(limb_t *)params2_qminus1_limbs, 2, 0}};
static const limb_t params2_m_limbs[] = {352975164560937697UL, 0UL};
static const int_t params2_m = {{(limb_t *)params2_m_limbs, 2, 0}};
static const limb_t params2_mby2_limbs[] = {0};
static const int_t params2_mby2 = {{(limb_t *)params2_mby2_limbs, 1, 0}};
static const limb_t params2_gamma_limbs[] = {214060UL, 0UL};
static const int_t params2_gamma = {{(limb_t *)params2_gamma_limbs, 2, 0}};
static const limb_t params2_gammaby2_limbs[] = {107030UL, 0UL};
static const int_t params2_gammaby2 = {{(limb_t *)params2_gammaby2_limbs, 2, 0}};
static const limb_t params2_pow2D_limbs[] = {1024UL, 0UL};
static const int_t params2_pow2D = {{(limb_t *)params2_pow2D_limbs, 2, 0}};
static const limb_t params2_pow2Dby2_limbs[] = {512UL, 0UL};
static const int_t params2_pow2Dby2 = {{(limb_t *)params2_pow2Dby2_limbs, 2, 0}};
static const limb_t params2_Bsq_limbs[] = {28811701806418UL, 0UL, 0UL, 0UL};
static const int_t params2_Bsq = {{(limb_t *)params2_Bsq_limbs, 4, 0}};
static const limb_t params2_scM1_limbs[] = {13070612053249907027UL, 796771226938074780UL, 5UL};
static const int_t params2_scM1 = {{(limb_t *)params2_scM1_limbs, 3, 0}};
static const limb_t params2_scM2_limbs[] = {12198286793215148079UL, 2856391274377535004UL, 7UL};
static const int_t params2_scM2 = {{(limb_t *)params2_scM2_limbs, 3, 0}};
static const limb_t params2_stdev1sq_limbs[] = {644916183UL, 0UL, 0UL, 0UL};
static const int_t params2_stdev1sq = {{(limb_t *)params2_stdev1sq_limbs, 4, 0}};
static const limb_t params2_stdev2sq_limbs[] = {644916183UL, 0UL, 0UL, 0UL};
static const int_t params2_stdev2sq = {{(limb_t *)params2_stdev2sq_limbs, 4, 0}};
static const limb_t params2_inv2_limbs[] = {342UL, 2048UL};
static const int_t params2_inv2 = {{(limb_t *)params2_inv2_limbs, 2, 1}};
static const polyring_t params2_ring = {{params2_q, 128, 77, 7, moduli_d128, 8, params2_inv2}};
static const dcompress_params_t params2_dcomp = {{ params2_q, params2_qminus1, params2_m, params2_mby2, params2_gamma, params2_gammaby2, params2_pow2D, params2_pow2Dby2, 10, 1, 59 }};
static const abdlop_params_t params2 = {{ params2_ring, params2_dcomp, 21, 31, 3, 1, 4, params2_Bsq, 1, 2, 3, 59, 1, 14, params2_scM1, params2_stdev1sq, 1, 14, params2_scM2, params2_stdev2sq}};
