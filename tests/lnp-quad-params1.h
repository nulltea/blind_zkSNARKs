// auto-generated by lnp-quad-codegen.sage from ../tests/lnp-quad-params1.sage.
//
// protocol is statistically complete with correctness error >= 1 - 2^(-5)
// protocol is simulatable under MLWE(25,20,[-1,1])
// protocol is knowledge-sound with knowledge error <= 2^(-128.0)
//
// Ring
// degree d = 64
// modulus q = 549755814757, log(q) ~ 39.0
// factors q = q1
//
// Compression
// D = 7
// gamma = 55878, log(gamma) ~ 15.769993
// m = (q-1)/gamma = 9838502, log(m) ~ 23.230007
//
// Dimensions of secrets
// s1: m1 = 10
// m: l = 2
// s2: m2 = 45
//
// Size of secrets
// l2(s1) <= alpha = 75.894664
// m unbounded
// s2 uniform in [-nu,nu] = [-1,1]
//
// Challenge space
// c uniform in [-omega,omega] = [-8,8], o(c)=c, sqrt(l1(o(c)*c)) <= eta = 140
//
// Standard deviations
// stdev1 = 101580.8, log(stdev1/1.55) = 16.0
// stdev2 = 50790.4, log(stdev2/1.55) = 15.0
//
// Repetition rate
// M1 = 4.0724839
// M2 = 7.3090867
// total = 29.766138
//
// Security
// MSIS dimension: 17
// MSIS root hermite factor: 1.004377
// MLWE dimension: 25
// MLWE root hermite factor: 1.0043312
//
// 23 bit moduli for degree 64: [8386817, 8386177, 8385281, 8384641]
// bit length of products: [22, 45, 68, 91]
// inverses: [1, 1664132, -20283, -3834820]

#include "lazer.h"
static const limb_t params1_q_limbs[] = {549755814757UL};
static const int_t params1_q = {{(limb_t *)params1_q_limbs, 1, 0}};
static const limb_t params1_qminus1_limbs[] = {549755814756UL};
static const int_t params1_qminus1 = {{(limb_t *)params1_qminus1_limbs, 1, 0}};
static const limb_t params1_m_limbs[] = {9838502UL};
static const int_t params1_m = {{(limb_t *)params1_m_limbs, 1, 0}};
static const limb_t params1_mby2_limbs[] = {4919251UL};
static const int_t params1_mby2 = {{(limb_t *)params1_mby2_limbs, 1, 0}};
static const limb_t params1_gamma_limbs[] = {55878UL};
static const int_t params1_gamma = {{(limb_t *)params1_gamma_limbs, 1, 0}};
static const limb_t params1_gammaby2_limbs[] = {27939UL};
static const int_t params1_gammaby2 = {{(limb_t *)params1_gammaby2_limbs, 1, 0}};
static const limb_t params1_pow2D_limbs[] = {128UL};
static const int_t params1_pow2D = {{(limb_t *)params1_pow2D_limbs, 1, 0}};
static const limb_t params1_pow2Dby2_limbs[] = {64UL};
static const int_t params1_pow2Dby2 = {{(limb_t *)params1_pow2Dby2_limbs, 1, 0}};
static const limb_t params1_Bsq_limbs[] = {25723440583725UL, 0UL};
static const int_t params1_Bsq = {{(limb_t *)params1_Bsq_limbs, 2, 0}};
static const limb_t params1_scM1_limbs[] = {13768581241400741304UL, 1337092322823884803UL, 4UL};
static const int_t params1_scM1 = {{(limb_t *)params1_scM1_limbs, 3, 0}};
static const limb_t params1_scM2_limbs[] = {11044002680744847694UL, 5701643520758863390UL, 7UL};
static const int_t params1_scM2 = {{(limb_t *)params1_scM2_limbs, 3, 0}};
static const limb_t params1_stdev1sq_limbs[] = {10318658929UL, 0UL};
static const int_t params1_stdev1sq = {{(limb_t *)params1_stdev1sq_limbs, 2, 0}};
static const limb_t params1_stdev2sq_limbs[] = {2579664732UL, 0UL};
static const int_t params1_stdev2sq = {{(limb_t *)params1_stdev2sq_limbs, 2, 0}};
static const limb_t params1_inv2_limbs[] = {274877907378UL};
static const int_t params1_inv2 = {{(limb_t *)params1_inv2_limbs, 1, 1}};
static const polyring_t params1_ring = {{params1_q, 64, 40, 6, moduli_d64, 4, params1_inv2}};
static const dcompress_params_t params1_dcomp = {{ params1_q, params1_qminus1, params1_m, params1_mby2, params1_gamma, params1_gammaby2, params1_pow2D, params1_pow2Dby2, 7, 0, 24 }};
static const abdlop_params_t params1 = {{ params1_ring, params1_dcomp, 10, 45, 2, 1, 17, params1_Bsq, 1, 8, 5, 140, 1, 16, params1_scM1, params1_stdev1sq, 1, 15, params1_scM2, params1_stdev2sq}};
