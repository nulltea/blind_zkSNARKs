// auto-generated by abdlop-codegen.sage from ../tests/abdlop-params3.sage.
//
// protocol is statistically complete with correctness error >= 1 - 2^(-5)
// protocol is simulatable under MLWE(32,13,[-1,1])
// protocol is knowledge-sound with knowledge error <= 2^(-129.0)
//
// Ring
// degree d = 64
// modulus q = 1125899906843221, log(q) ~ 50.0
// factors q = q1
//
// Compression
// D = 6
// gamma = 32330, log(gamma) ~ 14.980586
// m = (q-1)/gamma = 34825236834, log(m) ~ 35.019414
//
// Dimensions of secrets
// s1: m1 = 18
// m: l = 0
// s2: m2 = 45
//
// Size of secrets
// l2(s1) <= alpha = 33.941125
// m unbounded
// s2 uniform in [-nu,nu] = [-1,1]
//
// Challenge space
// c uniform in [-omega,omega] = [-8,8], o(c)=c, sqrt(l1(o(c)*c)) <= eta = 140
//
// Standard deviations
// stdev1 = 50790.4, log(stdev1/1.55) = 15.0
// stdev2 = 50790.4, log(stdev2/1.55) = 15.0
//
// Repetition rate
// M1 = 3.5095422
// M2 = 7.3090867
// total = 25.651548
//
// Security
// MSIS dimension: 13
// MSIS root hermite factor: 1.0043835
// MLWE dimension: 32
// MLWE root hermite factor: 1.0043146
//
// 23 bit moduli for degree 64: [8386817, 8386177, 8385281, 8384641, 8383489]
// bit length of products: [22, 45, 68, 91, 114]
// inverses: [1, 1664132, -20283, -3834820, -819883]

#include "lazer.h"
static const limb_t params3_q_limbs[] = {1125899906843221UL};
static const int_t params3_q = {{(limb_t *)params3_q_limbs, 1, 0}};
static const limb_t params3_qminus1_limbs[] = {1125899906843220UL};
static const int_t params3_qminus1 = {{(limb_t *)params3_qminus1_limbs, 1, 0}};
static const limb_t params3_m_limbs[] = {34825236834UL};
static const int_t params3_m = {{(limb_t *)params3_m_limbs, 1, 0}};
static const limb_t params3_mby2_limbs[] = {17412618417UL};
static const int_t params3_mby2 = {{(limb_t *)params3_mby2_limbs, 1, 0}};
static const limb_t params3_gamma_limbs[] = {32330UL};
static const int_t params3_gamma = {{(limb_t *)params3_gamma_limbs, 1, 0}};
static const limb_t params3_gammaby2_limbs[] = {16165UL};
static const int_t params3_gammaby2 = {{(limb_t *)params3_gammaby2_limbs, 1, 0}};
static const limb_t params3_pow2D_limbs[] = {64UL};
static const int_t params3_pow2D = {{(limb_t *)params3_pow2D_limbs, 1, 0}};
static const limb_t params3_pow2Dby2_limbs[] = {32UL};
static const int_t params3_pow2Dby2 = {{(limb_t *)params3_pow2Dby2_limbs, 1, 0}};
static const limb_t params3_Bsq_limbs[] = {19804397375571UL, 0UL};
static const int_t params3_Bsq = {{(limb_t *)params3_Bsq_limbs, 2, 0}};
static const limb_t params3_scM1_limbs[] = {3162355462835707339UL, 9399394807438489735UL, 3UL};
static const int_t params3_scM1 = {{(limb_t *)params3_scM1_limbs, 3, 0}};
static const limb_t params3_scM2_limbs[] = {11044002680744847694UL, 5701643520758863390UL, 7UL};
static const int_t params3_scM2 = {{(limb_t *)params3_scM2_limbs, 3, 0}};
static const limb_t params3_stdev1sq_limbs[] = {2579664732UL, 0UL};
static const int_t params3_stdev1sq = {{(limb_t *)params3_stdev1sq_limbs, 2, 0}};
static const limb_t params3_stdev2sq_limbs[] = {2579664732UL, 0UL};
static const int_t params3_stdev2sq = {{(limb_t *)params3_stdev2sq_limbs, 2, 0}};
static const limb_t params3_inv2_limbs[] = {562949953421610UL};
static const int_t params3_inv2 = {{(limb_t *)params3_inv2_limbs, 1, 1}};
static const polyring_t params3_ring = {{params3_q, 64, 51, 6, moduli_d64, 5, params3_inv2}};
static const dcompress_params_t params3_dcomp = {{ params3_q, params3_qminus1, params3_m, params3_mby2, params3_gamma, params3_gammaby2, params3_pow2D, params3_pow2Dby2, 6, 0, 36 }};
static const abdlop_params_t params3 = {{ params3_ring, params3_dcomp, 18, 45, 0, 0, 13, params3_Bsq, 1, 8, 5, 140, 1, 15, params3_scM1, params3_stdev1sq, 1, 15, params3_scM2, params3_stdev2sq}};
